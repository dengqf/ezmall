/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.ezmall.server.api;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class TGoods implements org.apache.thrift.TBase<TGoods, TGoods._Fields>, java.io.Serializable, Cloneable, Comparable<TGoods> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TGoods");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField NO_FIELD_DESC = new org.apache.thrift.protocol.TField("no", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField BRAND_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("brandNo", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField BRAND_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("brandName", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField CATEGORY_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("categoryNo", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField CATEGORY_STRUCT_FIELD_DESC = new org.apache.thrift.protocol.TField("categoryStruct", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField CATEGORY_STRUCT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("categoryStructName", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField MERCHANT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantName", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField MERCHANT_COMPANY_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantCompany", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField COST_PRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("costPrice", org.apache.thrift.protocol.TType.DOUBLE, (short)11);
  private static final org.apache.thrift.protocol.TField SELL_PRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("sellPrice", org.apache.thrift.protocol.TType.DOUBLE, (short)12);
  private static final org.apache.thrift.protocol.TField GIVE_SCORE_FIELD_DESC = new org.apache.thrift.protocol.TField("giveScore", org.apache.thrift.protocol.TType.I32, (short)13);
  private static final org.apache.thrift.protocol.TField MARKET_PRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("marketPrice", org.apache.thrift.protocol.TType.DOUBLE, (short)14);
  private static final org.apache.thrift.protocol.TField EXPRESS_PRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("expressPrice", org.apache.thrift.protocol.TType.DOUBLE, (short)15);
  private static final org.apache.thrift.protocol.TField CURRENCY_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("currencyType", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField STYLE_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("styleNo", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField SPEC_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("specName", org.apache.thrift.protocol.TType.STRING, (short)18);
  private static final org.apache.thrift.protocol.TField YEAR_FIELD_DESC = new org.apache.thrift.protocol.TField("year", org.apache.thrift.protocol.TType.STRING, (short)19);
  private static final org.apache.thrift.protocol.TField UNIT_FIELD_DESC = new org.apache.thrift.protocol.TField("unit", org.apache.thrift.protocol.TType.STRING, (short)20);
  private static final org.apache.thrift.protocol.TField COUNTRY_FIELD_DESC = new org.apache.thrift.protocol.TField("country", org.apache.thrift.protocol.TType.STRING, (short)21);
  private static final org.apache.thrift.protocol.TField CITY_FIELD_DESC = new org.apache.thrift.protocol.TField("city", org.apache.thrift.protocol.TType.STRING, (short)22);
  private static final org.apache.thrift.protocol.TField GOODS_DESC_FIELD_DESC = new org.apache.thrift.protocol.TField("goodsDesc", org.apache.thrift.protocol.TType.STRING, (short)23);
  private static final org.apache.thrift.protocol.TField GOODS_PICTURE_FIELD_DESC = new org.apache.thrift.protocol.TField("goodsPicture", org.apache.thrift.protocol.TType.STRING, (short)24);
  private static final org.apache.thrift.protocol.TField THIRD_LINK_FIELD_DESC = new org.apache.thrift.protocol.TField("thirdLink", org.apache.thrift.protocol.TType.STRING, (short)25);
  private static final org.apache.thrift.protocol.TField THIRD_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("thirdNo", org.apache.thrift.protocol.TType.STRING, (short)26);
  private static final org.apache.thrift.protocol.TField THIRD_PICTURE_FIELD_DESC = new org.apache.thrift.protocol.TField("thirdPicture", org.apache.thrift.protocol.TType.STRING, (short)27);
  private static final org.apache.thrift.protocol.TField SUPPLIER_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("supplierCode", org.apache.thrift.protocol.TType.STRING, (short)28);
  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.STRING, (short)29);
  private static final org.apache.thrift.protocol.TField VALID_FLAG_FIELD_DESC = new org.apache.thrift.protocol.TField("validFlag", org.apache.thrift.protocol.TType.STRING, (short)30);
  private static final org.apache.thrift.protocol.TField CREATE_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("createDate", org.apache.thrift.protocol.TType.I64, (short)31);
  private static final org.apache.thrift.protocol.TField UPDATE_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("updateDate", org.apache.thrift.protocol.TType.I64, (short)32);
  private static final org.apache.thrift.protocol.TField THIRD_DOMAIN_FIELD_DESC = new org.apache.thrift.protocol.TField("thirdDomain", org.apache.thrift.protocol.TType.STRING, (short)33);
  private static final org.apache.thrift.protocol.TField THIRD_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("thirdId", org.apache.thrift.protocol.TType.STRING, (short)34);
  private static final org.apache.thrift.protocol.TField THIRD_COL1_FIELD_DESC = new org.apache.thrift.protocol.TField("thirdCol1", org.apache.thrift.protocol.TType.STRING, (short)35);
  private static final org.apache.thrift.protocol.TField THIRD_COL2_FIELD_DESC = new org.apache.thrift.protocol.TField("thirdCol2", org.apache.thrift.protocol.TType.STRING, (short)36);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new TGoodsStandardSchemeFactory());
    schemes.put(TupleScheme.class, new TGoodsTupleSchemeFactory());
  }

  public String id; // required
  public String no; // required
  public String name; // required
  public String brandNo; // required
  public String brandName; // required
  public String categoryNo; // required
  public String categoryStruct; // required
  public String categoryStructName; // required
  public String merchantName; // required
  public String merchantCompany; // required
  public double costPrice; // required
  public double sellPrice; // required
  public int giveScore; // required
  public double marketPrice; // required
  public double expressPrice; // required
  public String currencyType; // required
  public String styleNo; // required
  public String specName; // required
  public String year; // required
  public String unit; // required
  public String country; // required
  public String city; // required
  public String goodsDesc; // required
  public String goodsPicture; // required
  public String thirdLink; // required
  public String thirdNo; // required
  public String thirdPicture; // required
  public String supplierCode; // required
  public String status; // required
  public String validFlag; // required
  public long createDate; // required
  public long updateDate; // required
  public String thirdDomain; // required
  public String thirdId; // required
  public String thirdCol1; // required
  public String thirdCol2; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    NO((short)2, "no"),
    NAME((short)3, "name"),
    BRAND_NO((short)4, "brandNo"),
    BRAND_NAME((short)5, "brandName"),
    CATEGORY_NO((short)6, "categoryNo"),
    CATEGORY_STRUCT((short)7, "categoryStruct"),
    CATEGORY_STRUCT_NAME((short)8, "categoryStructName"),
    MERCHANT_NAME((short)9, "merchantName"),
    MERCHANT_COMPANY((short)10, "merchantCompany"),
    COST_PRICE((short)11, "costPrice"),
    SELL_PRICE((short)12, "sellPrice"),
    GIVE_SCORE((short)13, "giveScore"),
    MARKET_PRICE((short)14, "marketPrice"),
    EXPRESS_PRICE((short)15, "expressPrice"),
    CURRENCY_TYPE((short)16, "currencyType"),
    STYLE_NO((short)17, "styleNo"),
    SPEC_NAME((short)18, "specName"),
    YEAR((short)19, "year"),
    UNIT((short)20, "unit"),
    COUNTRY((short)21, "country"),
    CITY((short)22, "city"),
    GOODS_DESC((short)23, "goodsDesc"),
    GOODS_PICTURE((short)24, "goodsPicture"),
    THIRD_LINK((short)25, "thirdLink"),
    THIRD_NO((short)26, "thirdNo"),
    THIRD_PICTURE((short)27, "thirdPicture"),
    SUPPLIER_CODE((short)28, "supplierCode"),
    STATUS((short)29, "status"),
    VALID_FLAG((short)30, "validFlag"),
    CREATE_DATE((short)31, "createDate"),
    UPDATE_DATE((short)32, "updateDate"),
    THIRD_DOMAIN((short)33, "thirdDomain"),
    THIRD_ID((short)34, "thirdId"),
    THIRD_COL1((short)35, "thirdCol1"),
    THIRD_COL2((short)36, "thirdCol2");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // NO
          return NO;
        case 3: // NAME
          return NAME;
        case 4: // BRAND_NO
          return BRAND_NO;
        case 5: // BRAND_NAME
          return BRAND_NAME;
        case 6: // CATEGORY_NO
          return CATEGORY_NO;
        case 7: // CATEGORY_STRUCT
          return CATEGORY_STRUCT;
        case 8: // CATEGORY_STRUCT_NAME
          return CATEGORY_STRUCT_NAME;
        case 9: // MERCHANT_NAME
          return MERCHANT_NAME;
        case 10: // MERCHANT_COMPANY
          return MERCHANT_COMPANY;
        case 11: // COST_PRICE
          return COST_PRICE;
        case 12: // SELL_PRICE
          return SELL_PRICE;
        case 13: // GIVE_SCORE
          return GIVE_SCORE;
        case 14: // MARKET_PRICE
          return MARKET_PRICE;
        case 15: // EXPRESS_PRICE
          return EXPRESS_PRICE;
        case 16: // CURRENCY_TYPE
          return CURRENCY_TYPE;
        case 17: // STYLE_NO
          return STYLE_NO;
        case 18: // SPEC_NAME
          return SPEC_NAME;
        case 19: // YEAR
          return YEAR;
        case 20: // UNIT
          return UNIT;
        case 21: // COUNTRY
          return COUNTRY;
        case 22: // CITY
          return CITY;
        case 23: // GOODS_DESC
          return GOODS_DESC;
        case 24: // GOODS_PICTURE
          return GOODS_PICTURE;
        case 25: // THIRD_LINK
          return THIRD_LINK;
        case 26: // THIRD_NO
          return THIRD_NO;
        case 27: // THIRD_PICTURE
          return THIRD_PICTURE;
        case 28: // SUPPLIER_CODE
          return SUPPLIER_CODE;
        case 29: // STATUS
          return STATUS;
        case 30: // VALID_FLAG
          return VALID_FLAG;
        case 31: // CREATE_DATE
          return CREATE_DATE;
        case 32: // UPDATE_DATE
          return UPDATE_DATE;
        case 33: // THIRD_DOMAIN
          return THIRD_DOMAIN;
        case 34: // THIRD_ID
          return THIRD_ID;
        case 35: // THIRD_COL1
          return THIRD_COL1;
        case 36: // THIRD_COL2
          return THIRD_COL2;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __COSTPRICE_ISSET_ID = 0;
  private static final int __SELLPRICE_ISSET_ID = 1;
  private static final int __GIVESCORE_ISSET_ID = 2;
  private static final int __MARKETPRICE_ISSET_ID = 3;
  private static final int __EXPRESSPRICE_ISSET_ID = 4;
  private static final int __CREATEDATE_ISSET_ID = 5;
  private static final int __UPDATEDATE_ISSET_ID = 6;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NO, new org.apache.thrift.meta_data.FieldMetaData("no", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BRAND_NO, new org.apache.thrift.meta_data.FieldMetaData("brandNo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BRAND_NAME, new org.apache.thrift.meta_data.FieldMetaData("brandName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CATEGORY_NO, new org.apache.thrift.meta_data.FieldMetaData("categoryNo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CATEGORY_STRUCT, new org.apache.thrift.meta_data.FieldMetaData("categoryStruct", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CATEGORY_STRUCT_NAME, new org.apache.thrift.meta_data.FieldMetaData("categoryStructName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_NAME, new org.apache.thrift.meta_data.FieldMetaData("merchantName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_COMPANY, new org.apache.thrift.meta_data.FieldMetaData("merchantCompany", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COST_PRICE, new org.apache.thrift.meta_data.FieldMetaData("costPrice", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.SELL_PRICE, new org.apache.thrift.meta_data.FieldMetaData("sellPrice", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.GIVE_SCORE, new org.apache.thrift.meta_data.FieldMetaData("giveScore", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.MARKET_PRICE, new org.apache.thrift.meta_data.FieldMetaData("marketPrice", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.EXPRESS_PRICE, new org.apache.thrift.meta_data.FieldMetaData("expressPrice", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.CURRENCY_TYPE, new org.apache.thrift.meta_data.FieldMetaData("currencyType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STYLE_NO, new org.apache.thrift.meta_data.FieldMetaData("styleNo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SPEC_NAME, new org.apache.thrift.meta_data.FieldMetaData("specName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.YEAR, new org.apache.thrift.meta_data.FieldMetaData("year", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.UNIT, new org.apache.thrift.meta_data.FieldMetaData("unit", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COUNTRY, new org.apache.thrift.meta_data.FieldMetaData("country", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CITY, new org.apache.thrift.meta_data.FieldMetaData("city", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.GOODS_DESC, new org.apache.thrift.meta_data.FieldMetaData("goodsDesc", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.GOODS_PICTURE, new org.apache.thrift.meta_data.FieldMetaData("goodsPicture", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.THIRD_LINK, new org.apache.thrift.meta_data.FieldMetaData("thirdLink", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.THIRD_NO, new org.apache.thrift.meta_data.FieldMetaData("thirdNo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.THIRD_PICTURE, new org.apache.thrift.meta_data.FieldMetaData("thirdPicture", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SUPPLIER_CODE, new org.apache.thrift.meta_data.FieldMetaData("supplierCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VALID_FLAG, new org.apache.thrift.meta_data.FieldMetaData("validFlag", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATE_DATE, new org.apache.thrift.meta_data.FieldMetaData("createDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.UPDATE_DATE, new org.apache.thrift.meta_data.FieldMetaData("updateDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.THIRD_DOMAIN, new org.apache.thrift.meta_data.FieldMetaData("thirdDomain", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.THIRD_ID, new org.apache.thrift.meta_data.FieldMetaData("thirdId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.THIRD_COL1, new org.apache.thrift.meta_data.FieldMetaData("thirdCol1", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.THIRD_COL2, new org.apache.thrift.meta_data.FieldMetaData("thirdCol2", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TGoods.class, metaDataMap);
  }

  public TGoods() {
  }

  public TGoods(
    String id,
    String no,
    String name,
    String brandNo,
    String brandName,
    String categoryNo,
    String categoryStruct,
    String categoryStructName,
    String merchantName,
    String merchantCompany,
    double costPrice,
    double sellPrice,
    int giveScore,
    double marketPrice,
    double expressPrice,
    String currencyType,
    String styleNo,
    String specName,
    String year,
    String unit,
    String country,
    String city,
    String goodsDesc,
    String goodsPicture,
    String thirdLink,
    String thirdNo,
    String thirdPicture,
    String supplierCode,
    String status,
    String validFlag,
    long createDate,
    long updateDate,
    String thirdDomain,
    String thirdId,
    String thirdCol1,
    String thirdCol2)
  {
    this();
    this.id = id;
    this.no = no;
    this.name = name;
    this.brandNo = brandNo;
    this.brandName = brandName;
    this.categoryNo = categoryNo;
    this.categoryStruct = categoryStruct;
    this.categoryStructName = categoryStructName;
    this.merchantName = merchantName;
    this.merchantCompany = merchantCompany;
    this.costPrice = costPrice;
    setCostPriceIsSet(true);
    this.sellPrice = sellPrice;
    setSellPriceIsSet(true);
    this.giveScore = giveScore;
    setGiveScoreIsSet(true);
    this.marketPrice = marketPrice;
    setMarketPriceIsSet(true);
    this.expressPrice = expressPrice;
    setExpressPriceIsSet(true);
    this.currencyType = currencyType;
    this.styleNo = styleNo;
    this.specName = specName;
    this.year = year;
    this.unit = unit;
    this.country = country;
    this.city = city;
    this.goodsDesc = goodsDesc;
    this.goodsPicture = goodsPicture;
    this.thirdLink = thirdLink;
    this.thirdNo = thirdNo;
    this.thirdPicture = thirdPicture;
    this.supplierCode = supplierCode;
    this.status = status;
    this.validFlag = validFlag;
    this.createDate = createDate;
    setCreateDateIsSet(true);
    this.updateDate = updateDate;
    setUpdateDateIsSet(true);
    this.thirdDomain = thirdDomain;
    this.thirdId = thirdId;
    this.thirdCol1 = thirdCol1;
    this.thirdCol2 = thirdCol2;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TGoods(TGoods other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetId()) {
      this.id = other.id;
    }
    if (other.isSetNo()) {
      this.no = other.no;
    }
    if (other.isSetName()) {
      this.name = other.name;
    }
    if (other.isSetBrandNo()) {
      this.brandNo = other.brandNo;
    }
    if (other.isSetBrandName()) {
      this.brandName = other.brandName;
    }
    if (other.isSetCategoryNo()) {
      this.categoryNo = other.categoryNo;
    }
    if (other.isSetCategoryStruct()) {
      this.categoryStruct = other.categoryStruct;
    }
    if (other.isSetCategoryStructName()) {
      this.categoryStructName = other.categoryStructName;
    }
    if (other.isSetMerchantName()) {
      this.merchantName = other.merchantName;
    }
    if (other.isSetMerchantCompany()) {
      this.merchantCompany = other.merchantCompany;
    }
    this.costPrice = other.costPrice;
    this.sellPrice = other.sellPrice;
    this.giveScore = other.giveScore;
    this.marketPrice = other.marketPrice;
    this.expressPrice = other.expressPrice;
    if (other.isSetCurrencyType()) {
      this.currencyType = other.currencyType;
    }
    if (other.isSetStyleNo()) {
      this.styleNo = other.styleNo;
    }
    if (other.isSetSpecName()) {
      this.specName = other.specName;
    }
    if (other.isSetYear()) {
      this.year = other.year;
    }
    if (other.isSetUnit()) {
      this.unit = other.unit;
    }
    if (other.isSetCountry()) {
      this.country = other.country;
    }
    if (other.isSetCity()) {
      this.city = other.city;
    }
    if (other.isSetGoodsDesc()) {
      this.goodsDesc = other.goodsDesc;
    }
    if (other.isSetGoodsPicture()) {
      this.goodsPicture = other.goodsPicture;
    }
    if (other.isSetThirdLink()) {
      this.thirdLink = other.thirdLink;
    }
    if (other.isSetThirdNo()) {
      this.thirdNo = other.thirdNo;
    }
    if (other.isSetThirdPicture()) {
      this.thirdPicture = other.thirdPicture;
    }
    if (other.isSetSupplierCode()) {
      this.supplierCode = other.supplierCode;
    }
    if (other.isSetStatus()) {
      this.status = other.status;
    }
    if (other.isSetValidFlag()) {
      this.validFlag = other.validFlag;
    }
    this.createDate = other.createDate;
    this.updateDate = other.updateDate;
    if (other.isSetThirdDomain()) {
      this.thirdDomain = other.thirdDomain;
    }
    if (other.isSetThirdId()) {
      this.thirdId = other.thirdId;
    }
    if (other.isSetThirdCol1()) {
      this.thirdCol1 = other.thirdCol1;
    }
    if (other.isSetThirdCol2()) {
      this.thirdCol2 = other.thirdCol2;
    }
  }

  public TGoods deepCopy() {
    return new TGoods(this);
  }

  @Override
  public void clear() {
    this.id = null;
    this.no = null;
    this.name = null;
    this.brandNo = null;
    this.brandName = null;
    this.categoryNo = null;
    this.categoryStruct = null;
    this.categoryStructName = null;
    this.merchantName = null;
    this.merchantCompany = null;
    setCostPriceIsSet(false);
    this.costPrice = 0.0;
    setSellPriceIsSet(false);
    this.sellPrice = 0.0;
    setGiveScoreIsSet(false);
    this.giveScore = 0;
    setMarketPriceIsSet(false);
    this.marketPrice = 0.0;
    setExpressPriceIsSet(false);
    this.expressPrice = 0.0;
    this.currencyType = null;
    this.styleNo = null;
    this.specName = null;
    this.year = null;
    this.unit = null;
    this.country = null;
    this.city = null;
    this.goodsDesc = null;
    this.goodsPicture = null;
    this.thirdLink = null;
    this.thirdNo = null;
    this.thirdPicture = null;
    this.supplierCode = null;
    this.status = null;
    this.validFlag = null;
    setCreateDateIsSet(false);
    this.createDate = 0;
    setUpdateDateIsSet(false);
    this.updateDate = 0;
    this.thirdDomain = null;
    this.thirdId = null;
    this.thirdCol1 = null;
    this.thirdCol2 = null;
  }

  public String getId() {
    return this.id;
  }

  public TGoods setId(String id) {
    this.id = id;
    return this;
  }

  public void unsetId() {
    this.id = null;
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return this.id != null;
  }

  public void setIdIsSet(boolean value) {
    if (!value) {
      this.id = null;
    }
  }

  public String getNo() {
    return this.no;
  }

  public TGoods setNo(String no) {
    this.no = no;
    return this;
  }

  public void unsetNo() {
    this.no = null;
  }

  /** Returns true if field no is set (has been assigned a value) and false otherwise */
  public boolean isSetNo() {
    return this.no != null;
  }

  public void setNoIsSet(boolean value) {
    if (!value) {
      this.no = null;
    }
  }

  public String getName() {
    return this.name;
  }

  public TGoods setName(String name) {
    this.name = name;
    return this;
  }

  public void unsetName() {
    this.name = null;
  }

  /** Returns true if field name is set (has been assigned a value) and false otherwise */
  public boolean isSetName() {
    return this.name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.name = null;
    }
  }

  public String getBrandNo() {
    return this.brandNo;
  }

  public TGoods setBrandNo(String brandNo) {
    this.brandNo = brandNo;
    return this;
  }

  public void unsetBrandNo() {
    this.brandNo = null;
  }

  /** Returns true if field brandNo is set (has been assigned a value) and false otherwise */
  public boolean isSetBrandNo() {
    return this.brandNo != null;
  }

  public void setBrandNoIsSet(boolean value) {
    if (!value) {
      this.brandNo = null;
    }
  }

  public String getBrandName() {
    return this.brandName;
  }

  public TGoods setBrandName(String brandName) {
    this.brandName = brandName;
    return this;
  }

  public void unsetBrandName() {
    this.brandName = null;
  }

  /** Returns true if field brandName is set (has been assigned a value) and false otherwise */
  public boolean isSetBrandName() {
    return this.brandName != null;
  }

  public void setBrandNameIsSet(boolean value) {
    if (!value) {
      this.brandName = null;
    }
  }

  public String getCategoryNo() {
    return this.categoryNo;
  }

  public TGoods setCategoryNo(String categoryNo) {
    this.categoryNo = categoryNo;
    return this;
  }

  public void unsetCategoryNo() {
    this.categoryNo = null;
  }

  /** Returns true if field categoryNo is set (has been assigned a value) and false otherwise */
  public boolean isSetCategoryNo() {
    return this.categoryNo != null;
  }

  public void setCategoryNoIsSet(boolean value) {
    if (!value) {
      this.categoryNo = null;
    }
  }

  public String getCategoryStruct() {
    return this.categoryStruct;
  }

  public TGoods setCategoryStruct(String categoryStruct) {
    this.categoryStruct = categoryStruct;
    return this;
  }

  public void unsetCategoryStruct() {
    this.categoryStruct = null;
  }

  /** Returns true if field categoryStruct is set (has been assigned a value) and false otherwise */
  public boolean isSetCategoryStruct() {
    return this.categoryStruct != null;
  }

  public void setCategoryStructIsSet(boolean value) {
    if (!value) {
      this.categoryStruct = null;
    }
  }

  public String getCategoryStructName() {
    return this.categoryStructName;
  }

  public TGoods setCategoryStructName(String categoryStructName) {
    this.categoryStructName = categoryStructName;
    return this;
  }

  public void unsetCategoryStructName() {
    this.categoryStructName = null;
  }

  /** Returns true if field categoryStructName is set (has been assigned a value) and false otherwise */
  public boolean isSetCategoryStructName() {
    return this.categoryStructName != null;
  }

  public void setCategoryStructNameIsSet(boolean value) {
    if (!value) {
      this.categoryStructName = null;
    }
  }

  public String getMerchantName() {
    return this.merchantName;
  }

  public TGoods setMerchantName(String merchantName) {
    this.merchantName = merchantName;
    return this;
  }

  public void unsetMerchantName() {
    this.merchantName = null;
  }

  /** Returns true if field merchantName is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantName() {
    return this.merchantName != null;
  }

  public void setMerchantNameIsSet(boolean value) {
    if (!value) {
      this.merchantName = null;
    }
  }

  public String getMerchantCompany() {
    return this.merchantCompany;
  }

  public TGoods setMerchantCompany(String merchantCompany) {
    this.merchantCompany = merchantCompany;
    return this;
  }

  public void unsetMerchantCompany() {
    this.merchantCompany = null;
  }

  /** Returns true if field merchantCompany is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantCompany() {
    return this.merchantCompany != null;
  }

  public void setMerchantCompanyIsSet(boolean value) {
    if (!value) {
      this.merchantCompany = null;
    }
  }

  public double getCostPrice() {
    return this.costPrice;
  }

  public TGoods setCostPrice(double costPrice) {
    this.costPrice = costPrice;
    setCostPriceIsSet(true);
    return this;
  }

  public void unsetCostPrice() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __COSTPRICE_ISSET_ID);
  }

  /** Returns true if field costPrice is set (has been assigned a value) and false otherwise */
  public boolean isSetCostPrice() {
    return EncodingUtils.testBit(__isset_bitfield, __COSTPRICE_ISSET_ID);
  }

  public void setCostPriceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __COSTPRICE_ISSET_ID, value);
  }

  public double getSellPrice() {
    return this.sellPrice;
  }

  public TGoods setSellPrice(double sellPrice) {
    this.sellPrice = sellPrice;
    setSellPriceIsSet(true);
    return this;
  }

  public void unsetSellPrice() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SELLPRICE_ISSET_ID);
  }

  /** Returns true if field sellPrice is set (has been assigned a value) and false otherwise */
  public boolean isSetSellPrice() {
    return EncodingUtils.testBit(__isset_bitfield, __SELLPRICE_ISSET_ID);
  }

  public void setSellPriceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SELLPRICE_ISSET_ID, value);
  }

  public int getGiveScore() {
    return this.giveScore;
  }

  public TGoods setGiveScore(int giveScore) {
    this.giveScore = giveScore;
    setGiveScoreIsSet(true);
    return this;
  }

  public void unsetGiveScore() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __GIVESCORE_ISSET_ID);
  }

  /** Returns true if field giveScore is set (has been assigned a value) and false otherwise */
  public boolean isSetGiveScore() {
    return EncodingUtils.testBit(__isset_bitfield, __GIVESCORE_ISSET_ID);
  }

  public void setGiveScoreIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __GIVESCORE_ISSET_ID, value);
  }

  public double getMarketPrice() {
    return this.marketPrice;
  }

  public TGoods setMarketPrice(double marketPrice) {
    this.marketPrice = marketPrice;
    setMarketPriceIsSet(true);
    return this;
  }

  public void unsetMarketPrice() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MARKETPRICE_ISSET_ID);
  }

  /** Returns true if field marketPrice is set (has been assigned a value) and false otherwise */
  public boolean isSetMarketPrice() {
    return EncodingUtils.testBit(__isset_bitfield, __MARKETPRICE_ISSET_ID);
  }

  public void setMarketPriceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MARKETPRICE_ISSET_ID, value);
  }

  public double getExpressPrice() {
    return this.expressPrice;
  }

  public TGoods setExpressPrice(double expressPrice) {
    this.expressPrice = expressPrice;
    setExpressPriceIsSet(true);
    return this;
  }

  public void unsetExpressPrice() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __EXPRESSPRICE_ISSET_ID);
  }

  /** Returns true if field expressPrice is set (has been assigned a value) and false otherwise */
  public boolean isSetExpressPrice() {
    return EncodingUtils.testBit(__isset_bitfield, __EXPRESSPRICE_ISSET_ID);
  }

  public void setExpressPriceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __EXPRESSPRICE_ISSET_ID, value);
  }

  public String getCurrencyType() {
    return this.currencyType;
  }

  public TGoods setCurrencyType(String currencyType) {
    this.currencyType = currencyType;
    return this;
  }

  public void unsetCurrencyType() {
    this.currencyType = null;
  }

  /** Returns true if field currencyType is set (has been assigned a value) and false otherwise */
  public boolean isSetCurrencyType() {
    return this.currencyType != null;
  }

  public void setCurrencyTypeIsSet(boolean value) {
    if (!value) {
      this.currencyType = null;
    }
  }

  public String getStyleNo() {
    return this.styleNo;
  }

  public TGoods setStyleNo(String styleNo) {
    this.styleNo = styleNo;
    return this;
  }

  public void unsetStyleNo() {
    this.styleNo = null;
  }

  /** Returns true if field styleNo is set (has been assigned a value) and false otherwise */
  public boolean isSetStyleNo() {
    return this.styleNo != null;
  }

  public void setStyleNoIsSet(boolean value) {
    if (!value) {
      this.styleNo = null;
    }
  }

  public String getSpecName() {
    return this.specName;
  }

  public TGoods setSpecName(String specName) {
    this.specName = specName;
    return this;
  }

  public void unsetSpecName() {
    this.specName = null;
  }

  /** Returns true if field specName is set (has been assigned a value) and false otherwise */
  public boolean isSetSpecName() {
    return this.specName != null;
  }

  public void setSpecNameIsSet(boolean value) {
    if (!value) {
      this.specName = null;
    }
  }

  public String getYear() {
    return this.year;
  }

  public TGoods setYear(String year) {
    this.year = year;
    return this;
  }

  public void unsetYear() {
    this.year = null;
  }

  /** Returns true if field year is set (has been assigned a value) and false otherwise */
  public boolean isSetYear() {
    return this.year != null;
  }

  public void setYearIsSet(boolean value) {
    if (!value) {
      this.year = null;
    }
  }

  public String getUnit() {
    return this.unit;
  }

  public TGoods setUnit(String unit) {
    this.unit = unit;
    return this;
  }

  public void unsetUnit() {
    this.unit = null;
  }

  /** Returns true if field unit is set (has been assigned a value) and false otherwise */
  public boolean isSetUnit() {
    return this.unit != null;
  }

  public void setUnitIsSet(boolean value) {
    if (!value) {
      this.unit = null;
    }
  }

  public String getCountry() {
    return this.country;
  }

  public TGoods setCountry(String country) {
    this.country = country;
    return this;
  }

  public void unsetCountry() {
    this.country = null;
  }

  /** Returns true if field country is set (has been assigned a value) and false otherwise */
  public boolean isSetCountry() {
    return this.country != null;
  }

  public void setCountryIsSet(boolean value) {
    if (!value) {
      this.country = null;
    }
  }

  public String getCity() {
    return this.city;
  }

  public TGoods setCity(String city) {
    this.city = city;
    return this;
  }

  public void unsetCity() {
    this.city = null;
  }

  /** Returns true if field city is set (has been assigned a value) and false otherwise */
  public boolean isSetCity() {
    return this.city != null;
  }

  public void setCityIsSet(boolean value) {
    if (!value) {
      this.city = null;
    }
  }

  public String getGoodsDesc() {
    return this.goodsDesc;
  }

  public TGoods setGoodsDesc(String goodsDesc) {
    this.goodsDesc = goodsDesc;
    return this;
  }

  public void unsetGoodsDesc() {
    this.goodsDesc = null;
  }

  /** Returns true if field goodsDesc is set (has been assigned a value) and false otherwise */
  public boolean isSetGoodsDesc() {
    return this.goodsDesc != null;
  }

  public void setGoodsDescIsSet(boolean value) {
    if (!value) {
      this.goodsDesc = null;
    }
  }

  public String getGoodsPicture() {
    return this.goodsPicture;
  }

  public TGoods setGoodsPicture(String goodsPicture) {
    this.goodsPicture = goodsPicture;
    return this;
  }

  public void unsetGoodsPicture() {
    this.goodsPicture = null;
  }

  /** Returns true if field goodsPicture is set (has been assigned a value) and false otherwise */
  public boolean isSetGoodsPicture() {
    return this.goodsPicture != null;
  }

  public void setGoodsPictureIsSet(boolean value) {
    if (!value) {
      this.goodsPicture = null;
    }
  }

  public String getThirdLink() {
    return this.thirdLink;
  }

  public TGoods setThirdLink(String thirdLink) {
    this.thirdLink = thirdLink;
    return this;
  }

  public void unsetThirdLink() {
    this.thirdLink = null;
  }

  /** Returns true if field thirdLink is set (has been assigned a value) and false otherwise */
  public boolean isSetThirdLink() {
    return this.thirdLink != null;
  }

  public void setThirdLinkIsSet(boolean value) {
    if (!value) {
      this.thirdLink = null;
    }
  }

  public String getThirdNo() {
    return this.thirdNo;
  }

  public TGoods setThirdNo(String thirdNo) {
    this.thirdNo = thirdNo;
    return this;
  }

  public void unsetThirdNo() {
    this.thirdNo = null;
  }

  /** Returns true if field thirdNo is set (has been assigned a value) and false otherwise */
  public boolean isSetThirdNo() {
    return this.thirdNo != null;
  }

  public void setThirdNoIsSet(boolean value) {
    if (!value) {
      this.thirdNo = null;
    }
  }

  public String getThirdPicture() {
    return this.thirdPicture;
  }

  public TGoods setThirdPicture(String thirdPicture) {
    this.thirdPicture = thirdPicture;
    return this;
  }

  public void unsetThirdPicture() {
    this.thirdPicture = null;
  }

  /** Returns true if field thirdPicture is set (has been assigned a value) and false otherwise */
  public boolean isSetThirdPicture() {
    return this.thirdPicture != null;
  }

  public void setThirdPictureIsSet(boolean value) {
    if (!value) {
      this.thirdPicture = null;
    }
  }

  public String getSupplierCode() {
    return this.supplierCode;
  }

  public TGoods setSupplierCode(String supplierCode) {
    this.supplierCode = supplierCode;
    return this;
  }

  public void unsetSupplierCode() {
    this.supplierCode = null;
  }

  /** Returns true if field supplierCode is set (has been assigned a value) and false otherwise */
  public boolean isSetSupplierCode() {
    return this.supplierCode != null;
  }

  public void setSupplierCodeIsSet(boolean value) {
    if (!value) {
      this.supplierCode = null;
    }
  }

  public String getStatus() {
    return this.status;
  }

  public TGoods setStatus(String status) {
    this.status = status;
    return this;
  }

  public void unsetStatus() {
    this.status = null;
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus() {
    return this.status != null;
  }

  public void setStatusIsSet(boolean value) {
    if (!value) {
      this.status = null;
    }
  }

  public String getValidFlag() {
    return this.validFlag;
  }

  public TGoods setValidFlag(String validFlag) {
    this.validFlag = validFlag;
    return this;
  }

  public void unsetValidFlag() {
    this.validFlag = null;
  }

  /** Returns true if field validFlag is set (has been assigned a value) and false otherwise */
  public boolean isSetValidFlag() {
    return this.validFlag != null;
  }

  public void setValidFlagIsSet(boolean value) {
    if (!value) {
      this.validFlag = null;
    }
  }

  public long getCreateDate() {
    return this.createDate;
  }

  public TGoods setCreateDate(long createDate) {
    this.createDate = createDate;
    setCreateDateIsSet(true);
    return this;
  }

  public void unsetCreateDate() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATEDATE_ISSET_ID);
  }

  /** Returns true if field createDate is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateDate() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATEDATE_ISSET_ID);
  }

  public void setCreateDateIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATEDATE_ISSET_ID, value);
  }

  public long getUpdateDate() {
    return this.updateDate;
  }

  public TGoods setUpdateDate(long updateDate) {
    this.updateDate = updateDate;
    setUpdateDateIsSet(true);
    return this;
  }

  public void unsetUpdateDate() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __UPDATEDATE_ISSET_ID);
  }

  /** Returns true if field updateDate is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdateDate() {
    return EncodingUtils.testBit(__isset_bitfield, __UPDATEDATE_ISSET_ID);
  }

  public void setUpdateDateIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __UPDATEDATE_ISSET_ID, value);
  }

  public String getThirdDomain() {
    return this.thirdDomain;
  }

  public TGoods setThirdDomain(String thirdDomain) {
    this.thirdDomain = thirdDomain;
    return this;
  }

  public void unsetThirdDomain() {
    this.thirdDomain = null;
  }

  /** Returns true if field thirdDomain is set (has been assigned a value) and false otherwise */
  public boolean isSetThirdDomain() {
    return this.thirdDomain != null;
  }

  public void setThirdDomainIsSet(boolean value) {
    if (!value) {
      this.thirdDomain = null;
    }
  }

  public String getThirdId() {
    return this.thirdId;
  }

  public TGoods setThirdId(String thirdId) {
    this.thirdId = thirdId;
    return this;
  }

  public void unsetThirdId() {
    this.thirdId = null;
  }

  /** Returns true if field thirdId is set (has been assigned a value) and false otherwise */
  public boolean isSetThirdId() {
    return this.thirdId != null;
  }

  public void setThirdIdIsSet(boolean value) {
    if (!value) {
      this.thirdId = null;
    }
  }

  public String getThirdCol1() {
    return this.thirdCol1;
  }

  public TGoods setThirdCol1(String thirdCol1) {
    this.thirdCol1 = thirdCol1;
    return this;
  }

  public void unsetThirdCol1() {
    this.thirdCol1 = null;
  }

  /** Returns true if field thirdCol1 is set (has been assigned a value) and false otherwise */
  public boolean isSetThirdCol1() {
    return this.thirdCol1 != null;
  }

  public void setThirdCol1IsSet(boolean value) {
    if (!value) {
      this.thirdCol1 = null;
    }
  }

  public String getThirdCol2() {
    return this.thirdCol2;
  }

  public TGoods setThirdCol2(String thirdCol2) {
    this.thirdCol2 = thirdCol2;
    return this;
  }

  public void unsetThirdCol2() {
    this.thirdCol2 = null;
  }

  /** Returns true if field thirdCol2 is set (has been assigned a value) and false otherwise */
  public boolean isSetThirdCol2() {
    return this.thirdCol2 != null;
  }

  public void setThirdCol2IsSet(boolean value) {
    if (!value) {
      this.thirdCol2 = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((String)value);
      }
      break;

    case NO:
      if (value == null) {
        unsetNo();
      } else {
        setNo((String)value);
      }
      break;

    case NAME:
      if (value == null) {
        unsetName();
      } else {
        setName((String)value);
      }
      break;

    case BRAND_NO:
      if (value == null) {
        unsetBrandNo();
      } else {
        setBrandNo((String)value);
      }
      break;

    case BRAND_NAME:
      if (value == null) {
        unsetBrandName();
      } else {
        setBrandName((String)value);
      }
      break;

    case CATEGORY_NO:
      if (value == null) {
        unsetCategoryNo();
      } else {
        setCategoryNo((String)value);
      }
      break;

    case CATEGORY_STRUCT:
      if (value == null) {
        unsetCategoryStruct();
      } else {
        setCategoryStruct((String)value);
      }
      break;

    case CATEGORY_STRUCT_NAME:
      if (value == null) {
        unsetCategoryStructName();
      } else {
        setCategoryStructName((String)value);
      }
      break;

    case MERCHANT_NAME:
      if (value == null) {
        unsetMerchantName();
      } else {
        setMerchantName((String)value);
      }
      break;

    case MERCHANT_COMPANY:
      if (value == null) {
        unsetMerchantCompany();
      } else {
        setMerchantCompany((String)value);
      }
      break;

    case COST_PRICE:
      if (value == null) {
        unsetCostPrice();
      } else {
        setCostPrice((Double)value);
      }
      break;

    case SELL_PRICE:
      if (value == null) {
        unsetSellPrice();
      } else {
        setSellPrice((Double)value);
      }
      break;

    case GIVE_SCORE:
      if (value == null) {
        unsetGiveScore();
      } else {
        setGiveScore((Integer)value);
      }
      break;

    case MARKET_PRICE:
      if (value == null) {
        unsetMarketPrice();
      } else {
        setMarketPrice((Double)value);
      }
      break;

    case EXPRESS_PRICE:
      if (value == null) {
        unsetExpressPrice();
      } else {
        setExpressPrice((Double)value);
      }
      break;

    case CURRENCY_TYPE:
      if (value == null) {
        unsetCurrencyType();
      } else {
        setCurrencyType((String)value);
      }
      break;

    case STYLE_NO:
      if (value == null) {
        unsetStyleNo();
      } else {
        setStyleNo((String)value);
      }
      break;

    case SPEC_NAME:
      if (value == null) {
        unsetSpecName();
      } else {
        setSpecName((String)value);
      }
      break;

    case YEAR:
      if (value == null) {
        unsetYear();
      } else {
        setYear((String)value);
      }
      break;

    case UNIT:
      if (value == null) {
        unsetUnit();
      } else {
        setUnit((String)value);
      }
      break;

    case COUNTRY:
      if (value == null) {
        unsetCountry();
      } else {
        setCountry((String)value);
      }
      break;

    case CITY:
      if (value == null) {
        unsetCity();
      } else {
        setCity((String)value);
      }
      break;

    case GOODS_DESC:
      if (value == null) {
        unsetGoodsDesc();
      } else {
        setGoodsDesc((String)value);
      }
      break;

    case GOODS_PICTURE:
      if (value == null) {
        unsetGoodsPicture();
      } else {
        setGoodsPicture((String)value);
      }
      break;

    case THIRD_LINK:
      if (value == null) {
        unsetThirdLink();
      } else {
        setThirdLink((String)value);
      }
      break;

    case THIRD_NO:
      if (value == null) {
        unsetThirdNo();
      } else {
        setThirdNo((String)value);
      }
      break;

    case THIRD_PICTURE:
      if (value == null) {
        unsetThirdPicture();
      } else {
        setThirdPicture((String)value);
      }
      break;

    case SUPPLIER_CODE:
      if (value == null) {
        unsetSupplierCode();
      } else {
        setSupplierCode((String)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((String)value);
      }
      break;

    case VALID_FLAG:
      if (value == null) {
        unsetValidFlag();
      } else {
        setValidFlag((String)value);
      }
      break;

    case CREATE_DATE:
      if (value == null) {
        unsetCreateDate();
      } else {
        setCreateDate((Long)value);
      }
      break;

    case UPDATE_DATE:
      if (value == null) {
        unsetUpdateDate();
      } else {
        setUpdateDate((Long)value);
      }
      break;

    case THIRD_DOMAIN:
      if (value == null) {
        unsetThirdDomain();
      } else {
        setThirdDomain((String)value);
      }
      break;

    case THIRD_ID:
      if (value == null) {
        unsetThirdId();
      } else {
        setThirdId((String)value);
      }
      break;

    case THIRD_COL1:
      if (value == null) {
        unsetThirdCol1();
      } else {
        setThirdCol1((String)value);
      }
      break;

    case THIRD_COL2:
      if (value == null) {
        unsetThirdCol2();
      } else {
        setThirdCol2((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case NO:
      return getNo();

    case NAME:
      return getName();

    case BRAND_NO:
      return getBrandNo();

    case BRAND_NAME:
      return getBrandName();

    case CATEGORY_NO:
      return getCategoryNo();

    case CATEGORY_STRUCT:
      return getCategoryStruct();

    case CATEGORY_STRUCT_NAME:
      return getCategoryStructName();

    case MERCHANT_NAME:
      return getMerchantName();

    case MERCHANT_COMPANY:
      return getMerchantCompany();

    case COST_PRICE:
      return Double.valueOf(getCostPrice());

    case SELL_PRICE:
      return Double.valueOf(getSellPrice());

    case GIVE_SCORE:
      return Integer.valueOf(getGiveScore());

    case MARKET_PRICE:
      return Double.valueOf(getMarketPrice());

    case EXPRESS_PRICE:
      return Double.valueOf(getExpressPrice());

    case CURRENCY_TYPE:
      return getCurrencyType();

    case STYLE_NO:
      return getStyleNo();

    case SPEC_NAME:
      return getSpecName();

    case YEAR:
      return getYear();

    case UNIT:
      return getUnit();

    case COUNTRY:
      return getCountry();

    case CITY:
      return getCity();

    case GOODS_DESC:
      return getGoodsDesc();

    case GOODS_PICTURE:
      return getGoodsPicture();

    case THIRD_LINK:
      return getThirdLink();

    case THIRD_NO:
      return getThirdNo();

    case THIRD_PICTURE:
      return getThirdPicture();

    case SUPPLIER_CODE:
      return getSupplierCode();

    case STATUS:
      return getStatus();

    case VALID_FLAG:
      return getValidFlag();

    case CREATE_DATE:
      return Long.valueOf(getCreateDate());

    case UPDATE_DATE:
      return Long.valueOf(getUpdateDate());

    case THIRD_DOMAIN:
      return getThirdDomain();

    case THIRD_ID:
      return getThirdId();

    case THIRD_COL1:
      return getThirdCol1();

    case THIRD_COL2:
      return getThirdCol2();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case NO:
      return isSetNo();
    case NAME:
      return isSetName();
    case BRAND_NO:
      return isSetBrandNo();
    case BRAND_NAME:
      return isSetBrandName();
    case CATEGORY_NO:
      return isSetCategoryNo();
    case CATEGORY_STRUCT:
      return isSetCategoryStruct();
    case CATEGORY_STRUCT_NAME:
      return isSetCategoryStructName();
    case MERCHANT_NAME:
      return isSetMerchantName();
    case MERCHANT_COMPANY:
      return isSetMerchantCompany();
    case COST_PRICE:
      return isSetCostPrice();
    case SELL_PRICE:
      return isSetSellPrice();
    case GIVE_SCORE:
      return isSetGiveScore();
    case MARKET_PRICE:
      return isSetMarketPrice();
    case EXPRESS_PRICE:
      return isSetExpressPrice();
    case CURRENCY_TYPE:
      return isSetCurrencyType();
    case STYLE_NO:
      return isSetStyleNo();
    case SPEC_NAME:
      return isSetSpecName();
    case YEAR:
      return isSetYear();
    case UNIT:
      return isSetUnit();
    case COUNTRY:
      return isSetCountry();
    case CITY:
      return isSetCity();
    case GOODS_DESC:
      return isSetGoodsDesc();
    case GOODS_PICTURE:
      return isSetGoodsPicture();
    case THIRD_LINK:
      return isSetThirdLink();
    case THIRD_NO:
      return isSetThirdNo();
    case THIRD_PICTURE:
      return isSetThirdPicture();
    case SUPPLIER_CODE:
      return isSetSupplierCode();
    case STATUS:
      return isSetStatus();
    case VALID_FLAG:
      return isSetValidFlag();
    case CREATE_DATE:
      return isSetCreateDate();
    case UPDATE_DATE:
      return isSetUpdateDate();
    case THIRD_DOMAIN:
      return isSetThirdDomain();
    case THIRD_ID:
      return isSetThirdId();
    case THIRD_COL1:
      return isSetThirdCol1();
    case THIRD_COL2:
      return isSetThirdCol2();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof TGoods)
      return this.equals((TGoods)that);
    return false;
  }

  public boolean equals(TGoods that) {
    if (that == null)
      return false;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (!this.id.equals(that.id))
        return false;
    }

    boolean this_present_no = true && this.isSetNo();
    boolean that_present_no = true && that.isSetNo();
    if (this_present_no || that_present_no) {
      if (!(this_present_no && that_present_no))
        return false;
      if (!this.no.equals(that.no))
        return false;
    }

    boolean this_present_name = true && this.isSetName();
    boolean that_present_name = true && that.isSetName();
    if (this_present_name || that_present_name) {
      if (!(this_present_name && that_present_name))
        return false;
      if (!this.name.equals(that.name))
        return false;
    }

    boolean this_present_brandNo = true && this.isSetBrandNo();
    boolean that_present_brandNo = true && that.isSetBrandNo();
    if (this_present_brandNo || that_present_brandNo) {
      if (!(this_present_brandNo && that_present_brandNo))
        return false;
      if (!this.brandNo.equals(that.brandNo))
        return false;
    }

    boolean this_present_brandName = true && this.isSetBrandName();
    boolean that_present_brandName = true && that.isSetBrandName();
    if (this_present_brandName || that_present_brandName) {
      if (!(this_present_brandName && that_present_brandName))
        return false;
      if (!this.brandName.equals(that.brandName))
        return false;
    }

    boolean this_present_categoryNo = true && this.isSetCategoryNo();
    boolean that_present_categoryNo = true && that.isSetCategoryNo();
    if (this_present_categoryNo || that_present_categoryNo) {
      if (!(this_present_categoryNo && that_present_categoryNo))
        return false;
      if (!this.categoryNo.equals(that.categoryNo))
        return false;
    }

    boolean this_present_categoryStruct = true && this.isSetCategoryStruct();
    boolean that_present_categoryStruct = true && that.isSetCategoryStruct();
    if (this_present_categoryStruct || that_present_categoryStruct) {
      if (!(this_present_categoryStruct && that_present_categoryStruct))
        return false;
      if (!this.categoryStruct.equals(that.categoryStruct))
        return false;
    }

    boolean this_present_categoryStructName = true && this.isSetCategoryStructName();
    boolean that_present_categoryStructName = true && that.isSetCategoryStructName();
    if (this_present_categoryStructName || that_present_categoryStructName) {
      if (!(this_present_categoryStructName && that_present_categoryStructName))
        return false;
      if (!this.categoryStructName.equals(that.categoryStructName))
        return false;
    }

    boolean this_present_merchantName = true && this.isSetMerchantName();
    boolean that_present_merchantName = true && that.isSetMerchantName();
    if (this_present_merchantName || that_present_merchantName) {
      if (!(this_present_merchantName && that_present_merchantName))
        return false;
      if (!this.merchantName.equals(that.merchantName))
        return false;
    }

    boolean this_present_merchantCompany = true && this.isSetMerchantCompany();
    boolean that_present_merchantCompany = true && that.isSetMerchantCompany();
    if (this_present_merchantCompany || that_present_merchantCompany) {
      if (!(this_present_merchantCompany && that_present_merchantCompany))
        return false;
      if (!this.merchantCompany.equals(that.merchantCompany))
        return false;
    }

    boolean this_present_costPrice = true;
    boolean that_present_costPrice = true;
    if (this_present_costPrice || that_present_costPrice) {
      if (!(this_present_costPrice && that_present_costPrice))
        return false;
      if (this.costPrice != that.costPrice)
        return false;
    }

    boolean this_present_sellPrice = true;
    boolean that_present_sellPrice = true;
    if (this_present_sellPrice || that_present_sellPrice) {
      if (!(this_present_sellPrice && that_present_sellPrice))
        return false;
      if (this.sellPrice != that.sellPrice)
        return false;
    }

    boolean this_present_giveScore = true;
    boolean that_present_giveScore = true;
    if (this_present_giveScore || that_present_giveScore) {
      if (!(this_present_giveScore && that_present_giveScore))
        return false;
      if (this.giveScore != that.giveScore)
        return false;
    }

    boolean this_present_marketPrice = true;
    boolean that_present_marketPrice = true;
    if (this_present_marketPrice || that_present_marketPrice) {
      if (!(this_present_marketPrice && that_present_marketPrice))
        return false;
      if (this.marketPrice != that.marketPrice)
        return false;
    }

    boolean this_present_expressPrice = true;
    boolean that_present_expressPrice = true;
    if (this_present_expressPrice || that_present_expressPrice) {
      if (!(this_present_expressPrice && that_present_expressPrice))
        return false;
      if (this.expressPrice != that.expressPrice)
        return false;
    }

    boolean this_present_currencyType = true && this.isSetCurrencyType();
    boolean that_present_currencyType = true && that.isSetCurrencyType();
    if (this_present_currencyType || that_present_currencyType) {
      if (!(this_present_currencyType && that_present_currencyType))
        return false;
      if (!this.currencyType.equals(that.currencyType))
        return false;
    }

    boolean this_present_styleNo = true && this.isSetStyleNo();
    boolean that_present_styleNo = true && that.isSetStyleNo();
    if (this_present_styleNo || that_present_styleNo) {
      if (!(this_present_styleNo && that_present_styleNo))
        return false;
      if (!this.styleNo.equals(that.styleNo))
        return false;
    }

    boolean this_present_specName = true && this.isSetSpecName();
    boolean that_present_specName = true && that.isSetSpecName();
    if (this_present_specName || that_present_specName) {
      if (!(this_present_specName && that_present_specName))
        return false;
      if (!this.specName.equals(that.specName))
        return false;
    }

    boolean this_present_year = true && this.isSetYear();
    boolean that_present_year = true && that.isSetYear();
    if (this_present_year || that_present_year) {
      if (!(this_present_year && that_present_year))
        return false;
      if (!this.year.equals(that.year))
        return false;
    }

    boolean this_present_unit = true && this.isSetUnit();
    boolean that_present_unit = true && that.isSetUnit();
    if (this_present_unit || that_present_unit) {
      if (!(this_present_unit && that_present_unit))
        return false;
      if (!this.unit.equals(that.unit))
        return false;
    }

    boolean this_present_country = true && this.isSetCountry();
    boolean that_present_country = true && that.isSetCountry();
    if (this_present_country || that_present_country) {
      if (!(this_present_country && that_present_country))
        return false;
      if (!this.country.equals(that.country))
        return false;
    }

    boolean this_present_city = true && this.isSetCity();
    boolean that_present_city = true && that.isSetCity();
    if (this_present_city || that_present_city) {
      if (!(this_present_city && that_present_city))
        return false;
      if (!this.city.equals(that.city))
        return false;
    }

    boolean this_present_goodsDesc = true && this.isSetGoodsDesc();
    boolean that_present_goodsDesc = true && that.isSetGoodsDesc();
    if (this_present_goodsDesc || that_present_goodsDesc) {
      if (!(this_present_goodsDesc && that_present_goodsDesc))
        return false;
      if (!this.goodsDesc.equals(that.goodsDesc))
        return false;
    }

    boolean this_present_goodsPicture = true && this.isSetGoodsPicture();
    boolean that_present_goodsPicture = true && that.isSetGoodsPicture();
    if (this_present_goodsPicture || that_present_goodsPicture) {
      if (!(this_present_goodsPicture && that_present_goodsPicture))
        return false;
      if (!this.goodsPicture.equals(that.goodsPicture))
        return false;
    }

    boolean this_present_thirdLink = true && this.isSetThirdLink();
    boolean that_present_thirdLink = true && that.isSetThirdLink();
    if (this_present_thirdLink || that_present_thirdLink) {
      if (!(this_present_thirdLink && that_present_thirdLink))
        return false;
      if (!this.thirdLink.equals(that.thirdLink))
        return false;
    }

    boolean this_present_thirdNo = true && this.isSetThirdNo();
    boolean that_present_thirdNo = true && that.isSetThirdNo();
    if (this_present_thirdNo || that_present_thirdNo) {
      if (!(this_present_thirdNo && that_present_thirdNo))
        return false;
      if (!this.thirdNo.equals(that.thirdNo))
        return false;
    }

    boolean this_present_thirdPicture = true && this.isSetThirdPicture();
    boolean that_present_thirdPicture = true && that.isSetThirdPicture();
    if (this_present_thirdPicture || that_present_thirdPicture) {
      if (!(this_present_thirdPicture && that_present_thirdPicture))
        return false;
      if (!this.thirdPicture.equals(that.thirdPicture))
        return false;
    }

    boolean this_present_supplierCode = true && this.isSetSupplierCode();
    boolean that_present_supplierCode = true && that.isSetSupplierCode();
    if (this_present_supplierCode || that_present_supplierCode) {
      if (!(this_present_supplierCode && that_present_supplierCode))
        return false;
      if (!this.supplierCode.equals(that.supplierCode))
        return false;
    }

    boolean this_present_status = true && this.isSetStatus();
    boolean that_present_status = true && that.isSetStatus();
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (!this.status.equals(that.status))
        return false;
    }

    boolean this_present_validFlag = true && this.isSetValidFlag();
    boolean that_present_validFlag = true && that.isSetValidFlag();
    if (this_present_validFlag || that_present_validFlag) {
      if (!(this_present_validFlag && that_present_validFlag))
        return false;
      if (!this.validFlag.equals(that.validFlag))
        return false;
    }

    boolean this_present_createDate = true;
    boolean that_present_createDate = true;
    if (this_present_createDate || that_present_createDate) {
      if (!(this_present_createDate && that_present_createDate))
        return false;
      if (this.createDate != that.createDate)
        return false;
    }

    boolean this_present_updateDate = true;
    boolean that_present_updateDate = true;
    if (this_present_updateDate || that_present_updateDate) {
      if (!(this_present_updateDate && that_present_updateDate))
        return false;
      if (this.updateDate != that.updateDate)
        return false;
    }

    boolean this_present_thirdDomain = true && this.isSetThirdDomain();
    boolean that_present_thirdDomain = true && that.isSetThirdDomain();
    if (this_present_thirdDomain || that_present_thirdDomain) {
      if (!(this_present_thirdDomain && that_present_thirdDomain))
        return false;
      if (!this.thirdDomain.equals(that.thirdDomain))
        return false;
    }

    boolean this_present_thirdId = true && this.isSetThirdId();
    boolean that_present_thirdId = true && that.isSetThirdId();
    if (this_present_thirdId || that_present_thirdId) {
      if (!(this_present_thirdId && that_present_thirdId))
        return false;
      if (!this.thirdId.equals(that.thirdId))
        return false;
    }

    boolean this_present_thirdCol1 = true && this.isSetThirdCol1();
    boolean that_present_thirdCol1 = true && that.isSetThirdCol1();
    if (this_present_thirdCol1 || that_present_thirdCol1) {
      if (!(this_present_thirdCol1 && that_present_thirdCol1))
        return false;
      if (!this.thirdCol1.equals(that.thirdCol1))
        return false;
    }

    boolean this_present_thirdCol2 = true && this.isSetThirdCol2();
    boolean that_present_thirdCol2 = true && that.isSetThirdCol2();
    if (this_present_thirdCol2 || that_present_thirdCol2) {
      if (!(this_present_thirdCol2 && that_present_thirdCol2))
        return false;
      if (!this.thirdCol2.equals(that.thirdCol2))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  @Override
  public int compareTo(TGoods other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNo()).compareTo(other.isSetNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.no, other.no);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetName()).compareTo(other.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, other.name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBrandNo()).compareTo(other.isSetBrandNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBrandNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.brandNo, other.brandNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBrandName()).compareTo(other.isSetBrandName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBrandName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.brandName, other.brandName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCategoryNo()).compareTo(other.isSetCategoryNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCategoryNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.categoryNo, other.categoryNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCategoryStruct()).compareTo(other.isSetCategoryStruct());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCategoryStruct()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.categoryStruct, other.categoryStruct);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCategoryStructName()).compareTo(other.isSetCategoryStructName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCategoryStructName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.categoryStructName, other.categoryStructName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantName()).compareTo(other.isSetMerchantName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantName, other.merchantName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantCompany()).compareTo(other.isSetMerchantCompany());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantCompany()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantCompany, other.merchantCompany);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCostPrice()).compareTo(other.isSetCostPrice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCostPrice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.costPrice, other.costPrice);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSellPrice()).compareTo(other.isSetSellPrice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSellPrice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sellPrice, other.sellPrice);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetGiveScore()).compareTo(other.isSetGiveScore());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGiveScore()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.giveScore, other.giveScore);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMarketPrice()).compareTo(other.isSetMarketPrice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMarketPrice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.marketPrice, other.marketPrice);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetExpressPrice()).compareTo(other.isSetExpressPrice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExpressPrice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.expressPrice, other.expressPrice);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCurrencyType()).compareTo(other.isSetCurrencyType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCurrencyType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.currencyType, other.currencyType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStyleNo()).compareTo(other.isSetStyleNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStyleNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.styleNo, other.styleNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSpecName()).compareTo(other.isSetSpecName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSpecName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.specName, other.specName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetYear()).compareTo(other.isSetYear());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetYear()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.year, other.year);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUnit()).compareTo(other.isSetUnit());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUnit()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.unit, other.unit);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCountry()).compareTo(other.isSetCountry());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCountry()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.country, other.country);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCity()).compareTo(other.isSetCity());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCity()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.city, other.city);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetGoodsDesc()).compareTo(other.isSetGoodsDesc());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGoodsDesc()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.goodsDesc, other.goodsDesc);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetGoodsPicture()).compareTo(other.isSetGoodsPicture());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGoodsPicture()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.goodsPicture, other.goodsPicture);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetThirdLink()).compareTo(other.isSetThirdLink());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetThirdLink()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.thirdLink, other.thirdLink);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetThirdNo()).compareTo(other.isSetThirdNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetThirdNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.thirdNo, other.thirdNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetThirdPicture()).compareTo(other.isSetThirdPicture());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetThirdPicture()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.thirdPicture, other.thirdPicture);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSupplierCode()).compareTo(other.isSetSupplierCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSupplierCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.supplierCode, other.supplierCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatus()).compareTo(other.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, other.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetValidFlag()).compareTo(other.isSetValidFlag());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetValidFlag()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.validFlag, other.validFlag);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateDate()).compareTo(other.isSetCreateDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createDate, other.createDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUpdateDate()).compareTo(other.isSetUpdateDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdateDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.updateDate, other.updateDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetThirdDomain()).compareTo(other.isSetThirdDomain());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetThirdDomain()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.thirdDomain, other.thirdDomain);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetThirdId()).compareTo(other.isSetThirdId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetThirdId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.thirdId, other.thirdId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetThirdCol1()).compareTo(other.isSetThirdCol1());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetThirdCol1()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.thirdCol1, other.thirdCol1);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetThirdCol2()).compareTo(other.isSetThirdCol2());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetThirdCol2()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.thirdCol2, other.thirdCol2);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("TGoods(");
    boolean first = true;

    sb.append("id:");
    if (this.id == null) {
      sb.append("null");
    } else {
      sb.append(this.id);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("no:");
    if (this.no == null) {
      sb.append("null");
    } else {
      sb.append(this.no);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("name:");
    if (this.name == null) {
      sb.append("null");
    } else {
      sb.append(this.name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("brandNo:");
    if (this.brandNo == null) {
      sb.append("null");
    } else {
      sb.append(this.brandNo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("brandName:");
    if (this.brandName == null) {
      sb.append("null");
    } else {
      sb.append(this.brandName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("categoryNo:");
    if (this.categoryNo == null) {
      sb.append("null");
    } else {
      sb.append(this.categoryNo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("categoryStruct:");
    if (this.categoryStruct == null) {
      sb.append("null");
    } else {
      sb.append(this.categoryStruct);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("categoryStructName:");
    if (this.categoryStructName == null) {
      sb.append("null");
    } else {
      sb.append(this.categoryStructName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("merchantName:");
    if (this.merchantName == null) {
      sb.append("null");
    } else {
      sb.append(this.merchantName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("merchantCompany:");
    if (this.merchantCompany == null) {
      sb.append("null");
    } else {
      sb.append(this.merchantCompany);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("costPrice:");
    sb.append(this.costPrice);
    first = false;
    if (!first) sb.append(", ");
    sb.append("sellPrice:");
    sb.append(this.sellPrice);
    first = false;
    if (!first) sb.append(", ");
    sb.append("giveScore:");
    sb.append(this.giveScore);
    first = false;
    if (!first) sb.append(", ");
    sb.append("marketPrice:");
    sb.append(this.marketPrice);
    first = false;
    if (!first) sb.append(", ");
    sb.append("expressPrice:");
    sb.append(this.expressPrice);
    first = false;
    if (!first) sb.append(", ");
    sb.append("currencyType:");
    if (this.currencyType == null) {
      sb.append("null");
    } else {
      sb.append(this.currencyType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("styleNo:");
    if (this.styleNo == null) {
      sb.append("null");
    } else {
      sb.append(this.styleNo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("specName:");
    if (this.specName == null) {
      sb.append("null");
    } else {
      sb.append(this.specName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("year:");
    if (this.year == null) {
      sb.append("null");
    } else {
      sb.append(this.year);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("unit:");
    if (this.unit == null) {
      sb.append("null");
    } else {
      sb.append(this.unit);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("country:");
    if (this.country == null) {
      sb.append("null");
    } else {
      sb.append(this.country);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("city:");
    if (this.city == null) {
      sb.append("null");
    } else {
      sb.append(this.city);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("goodsDesc:");
    if (this.goodsDesc == null) {
      sb.append("null");
    } else {
      sb.append(this.goodsDesc);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("goodsPicture:");
    if (this.goodsPicture == null) {
      sb.append("null");
    } else {
      sb.append(this.goodsPicture);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("thirdLink:");
    if (this.thirdLink == null) {
      sb.append("null");
    } else {
      sb.append(this.thirdLink);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("thirdNo:");
    if (this.thirdNo == null) {
      sb.append("null");
    } else {
      sb.append(this.thirdNo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("thirdPicture:");
    if (this.thirdPicture == null) {
      sb.append("null");
    } else {
      sb.append(this.thirdPicture);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("supplierCode:");
    if (this.supplierCode == null) {
      sb.append("null");
    } else {
      sb.append(this.supplierCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("status:");
    if (this.status == null) {
      sb.append("null");
    } else {
      sb.append(this.status);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("validFlag:");
    if (this.validFlag == null) {
      sb.append("null");
    } else {
      sb.append(this.validFlag);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("createDate:");
    sb.append(this.createDate);
    first = false;
    if (!first) sb.append(", ");
    sb.append("updateDate:");
    sb.append(this.updateDate);
    first = false;
    if (!first) sb.append(", ");
    sb.append("thirdDomain:");
    if (this.thirdDomain == null) {
      sb.append("null");
    } else {
      sb.append(this.thirdDomain);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("thirdId:");
    if (this.thirdId == null) {
      sb.append("null");
    } else {
      sb.append(this.thirdId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("thirdCol1:");
    if (this.thirdCol1 == null) {
      sb.append("null");
    } else {
      sb.append(this.thirdCol1);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("thirdCol2:");
    if (this.thirdCol2 == null) {
      sb.append("null");
    } else {
      sb.append(this.thirdCol2);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TGoodsStandardSchemeFactory implements SchemeFactory {
    public TGoodsStandardScheme getScheme() {
      return new TGoodsStandardScheme();
    }
  }

  private static class TGoodsStandardScheme extends StandardScheme<TGoods> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TGoods struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.id = iprot.readString();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.no = iprot.readString();
              struct.setNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.name = iprot.readString();
              struct.setNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // BRAND_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.brandNo = iprot.readString();
              struct.setBrandNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // BRAND_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.brandName = iprot.readString();
              struct.setBrandNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // CATEGORY_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.categoryNo = iprot.readString();
              struct.setCategoryNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // CATEGORY_STRUCT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.categoryStruct = iprot.readString();
              struct.setCategoryStructIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // CATEGORY_STRUCT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.categoryStructName = iprot.readString();
              struct.setCategoryStructNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // MERCHANT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantName = iprot.readString();
              struct.setMerchantNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // MERCHANT_COMPANY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantCompany = iprot.readString();
              struct.setMerchantCompanyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // COST_PRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.costPrice = iprot.readDouble();
              struct.setCostPriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // SELL_PRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.sellPrice = iprot.readDouble();
              struct.setSellPriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // GIVE_SCORE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.giveScore = iprot.readI32();
              struct.setGiveScoreIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // MARKET_PRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.marketPrice = iprot.readDouble();
              struct.setMarketPriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // EXPRESS_PRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.expressPrice = iprot.readDouble();
              struct.setExpressPriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // CURRENCY_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.currencyType = iprot.readString();
              struct.setCurrencyTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // STYLE_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.styleNo = iprot.readString();
              struct.setStyleNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // SPEC_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.specName = iprot.readString();
              struct.setSpecNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // YEAR
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.year = iprot.readString();
              struct.setYearIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // UNIT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.unit = iprot.readString();
              struct.setUnitIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // COUNTRY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.country = iprot.readString();
              struct.setCountryIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // CITY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.city = iprot.readString();
              struct.setCityIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // GOODS_DESC
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.goodsDesc = iprot.readString();
              struct.setGoodsDescIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // GOODS_PICTURE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.goodsPicture = iprot.readString();
              struct.setGoodsPictureIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // THIRD_LINK
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.thirdLink = iprot.readString();
              struct.setThirdLinkIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // THIRD_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.thirdNo = iprot.readString();
              struct.setThirdNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 27: // THIRD_PICTURE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.thirdPicture = iprot.readString();
              struct.setThirdPictureIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 28: // SUPPLIER_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.supplierCode = iprot.readString();
              struct.setSupplierCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 29: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.status = iprot.readString();
              struct.setStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 30: // VALID_FLAG
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.validFlag = iprot.readString();
              struct.setValidFlagIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 31: // CREATE_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createDate = iprot.readI64();
              struct.setCreateDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 32: // UPDATE_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.updateDate = iprot.readI64();
              struct.setUpdateDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 33: // THIRD_DOMAIN
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.thirdDomain = iprot.readString();
              struct.setThirdDomainIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 34: // THIRD_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.thirdId = iprot.readString();
              struct.setThirdIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 35: // THIRD_COL1
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.thirdCol1 = iprot.readString();
              struct.setThirdCol1IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 36: // THIRD_COL2
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.thirdCol2 = iprot.readString();
              struct.setThirdCol2IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TGoods struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.id != null) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeString(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.no != null) {
        oprot.writeFieldBegin(NO_FIELD_DESC);
        oprot.writeString(struct.no);
        oprot.writeFieldEnd();
      }
      if (struct.name != null) {
        oprot.writeFieldBegin(NAME_FIELD_DESC);
        oprot.writeString(struct.name);
        oprot.writeFieldEnd();
      }
      if (struct.brandNo != null) {
        oprot.writeFieldBegin(BRAND_NO_FIELD_DESC);
        oprot.writeString(struct.brandNo);
        oprot.writeFieldEnd();
      }
      if (struct.brandName != null) {
        oprot.writeFieldBegin(BRAND_NAME_FIELD_DESC);
        oprot.writeString(struct.brandName);
        oprot.writeFieldEnd();
      }
      if (struct.categoryNo != null) {
        oprot.writeFieldBegin(CATEGORY_NO_FIELD_DESC);
        oprot.writeString(struct.categoryNo);
        oprot.writeFieldEnd();
      }
      if (struct.categoryStruct != null) {
        oprot.writeFieldBegin(CATEGORY_STRUCT_FIELD_DESC);
        oprot.writeString(struct.categoryStruct);
        oprot.writeFieldEnd();
      }
      if (struct.categoryStructName != null) {
        oprot.writeFieldBegin(CATEGORY_STRUCT_NAME_FIELD_DESC);
        oprot.writeString(struct.categoryStructName);
        oprot.writeFieldEnd();
      }
      if (struct.merchantName != null) {
        oprot.writeFieldBegin(MERCHANT_NAME_FIELD_DESC);
        oprot.writeString(struct.merchantName);
        oprot.writeFieldEnd();
      }
      if (struct.merchantCompany != null) {
        oprot.writeFieldBegin(MERCHANT_COMPANY_FIELD_DESC);
        oprot.writeString(struct.merchantCompany);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(COST_PRICE_FIELD_DESC);
      oprot.writeDouble(struct.costPrice);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SELL_PRICE_FIELD_DESC);
      oprot.writeDouble(struct.sellPrice);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(GIVE_SCORE_FIELD_DESC);
      oprot.writeI32(struct.giveScore);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(MARKET_PRICE_FIELD_DESC);
      oprot.writeDouble(struct.marketPrice);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(EXPRESS_PRICE_FIELD_DESC);
      oprot.writeDouble(struct.expressPrice);
      oprot.writeFieldEnd();
      if (struct.currencyType != null) {
        oprot.writeFieldBegin(CURRENCY_TYPE_FIELD_DESC);
        oprot.writeString(struct.currencyType);
        oprot.writeFieldEnd();
      }
      if (struct.styleNo != null) {
        oprot.writeFieldBegin(STYLE_NO_FIELD_DESC);
        oprot.writeString(struct.styleNo);
        oprot.writeFieldEnd();
      }
      if (struct.specName != null) {
        oprot.writeFieldBegin(SPEC_NAME_FIELD_DESC);
        oprot.writeString(struct.specName);
        oprot.writeFieldEnd();
      }
      if (struct.year != null) {
        oprot.writeFieldBegin(YEAR_FIELD_DESC);
        oprot.writeString(struct.year);
        oprot.writeFieldEnd();
      }
      if (struct.unit != null) {
        oprot.writeFieldBegin(UNIT_FIELD_DESC);
        oprot.writeString(struct.unit);
        oprot.writeFieldEnd();
      }
      if (struct.country != null) {
        oprot.writeFieldBegin(COUNTRY_FIELD_DESC);
        oprot.writeString(struct.country);
        oprot.writeFieldEnd();
      }
      if (struct.city != null) {
        oprot.writeFieldBegin(CITY_FIELD_DESC);
        oprot.writeString(struct.city);
        oprot.writeFieldEnd();
      }
      if (struct.goodsDesc != null) {
        oprot.writeFieldBegin(GOODS_DESC_FIELD_DESC);
        oprot.writeString(struct.goodsDesc);
        oprot.writeFieldEnd();
      }
      if (struct.goodsPicture != null) {
        oprot.writeFieldBegin(GOODS_PICTURE_FIELD_DESC);
        oprot.writeString(struct.goodsPicture);
        oprot.writeFieldEnd();
      }
      if (struct.thirdLink != null) {
        oprot.writeFieldBegin(THIRD_LINK_FIELD_DESC);
        oprot.writeString(struct.thirdLink);
        oprot.writeFieldEnd();
      }
      if (struct.thirdNo != null) {
        oprot.writeFieldBegin(THIRD_NO_FIELD_DESC);
        oprot.writeString(struct.thirdNo);
        oprot.writeFieldEnd();
      }
      if (struct.thirdPicture != null) {
        oprot.writeFieldBegin(THIRD_PICTURE_FIELD_DESC);
        oprot.writeString(struct.thirdPicture);
        oprot.writeFieldEnd();
      }
      if (struct.supplierCode != null) {
        oprot.writeFieldBegin(SUPPLIER_CODE_FIELD_DESC);
        oprot.writeString(struct.supplierCode);
        oprot.writeFieldEnd();
      }
      if (struct.status != null) {
        oprot.writeFieldBegin(STATUS_FIELD_DESC);
        oprot.writeString(struct.status);
        oprot.writeFieldEnd();
      }
      if (struct.validFlag != null) {
        oprot.writeFieldBegin(VALID_FLAG_FIELD_DESC);
        oprot.writeString(struct.validFlag);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CREATE_DATE_FIELD_DESC);
      oprot.writeI64(struct.createDate);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(UPDATE_DATE_FIELD_DESC);
      oprot.writeI64(struct.updateDate);
      oprot.writeFieldEnd();
      if (struct.thirdDomain != null) {
        oprot.writeFieldBegin(THIRD_DOMAIN_FIELD_DESC);
        oprot.writeString(struct.thirdDomain);
        oprot.writeFieldEnd();
      }
      if (struct.thirdId != null) {
        oprot.writeFieldBegin(THIRD_ID_FIELD_DESC);
        oprot.writeString(struct.thirdId);
        oprot.writeFieldEnd();
      }
      if (struct.thirdCol1 != null) {
        oprot.writeFieldBegin(THIRD_COL1_FIELD_DESC);
        oprot.writeString(struct.thirdCol1);
        oprot.writeFieldEnd();
      }
      if (struct.thirdCol2 != null) {
        oprot.writeFieldBegin(THIRD_COL2_FIELD_DESC);
        oprot.writeString(struct.thirdCol2);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TGoodsTupleSchemeFactory implements SchemeFactory {
    public TGoodsTupleScheme getScheme() {
      return new TGoodsTupleScheme();
    }
  }

  private static class TGoodsTupleScheme extends TupleScheme<TGoods> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TGoods struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetNo()) {
        optionals.set(1);
      }
      if (struct.isSetName()) {
        optionals.set(2);
      }
      if (struct.isSetBrandNo()) {
        optionals.set(3);
      }
      if (struct.isSetBrandName()) {
        optionals.set(4);
      }
      if (struct.isSetCategoryNo()) {
        optionals.set(5);
      }
      if (struct.isSetCategoryStruct()) {
        optionals.set(6);
      }
      if (struct.isSetCategoryStructName()) {
        optionals.set(7);
      }
      if (struct.isSetMerchantName()) {
        optionals.set(8);
      }
      if (struct.isSetMerchantCompany()) {
        optionals.set(9);
      }
      if (struct.isSetCostPrice()) {
        optionals.set(10);
      }
      if (struct.isSetSellPrice()) {
        optionals.set(11);
      }
      if (struct.isSetGiveScore()) {
        optionals.set(12);
      }
      if (struct.isSetMarketPrice()) {
        optionals.set(13);
      }
      if (struct.isSetExpressPrice()) {
        optionals.set(14);
      }
      if (struct.isSetCurrencyType()) {
        optionals.set(15);
      }
      if (struct.isSetStyleNo()) {
        optionals.set(16);
      }
      if (struct.isSetSpecName()) {
        optionals.set(17);
      }
      if (struct.isSetYear()) {
        optionals.set(18);
      }
      if (struct.isSetUnit()) {
        optionals.set(19);
      }
      if (struct.isSetCountry()) {
        optionals.set(20);
      }
      if (struct.isSetCity()) {
        optionals.set(21);
      }
      if (struct.isSetGoodsDesc()) {
        optionals.set(22);
      }
      if (struct.isSetGoodsPicture()) {
        optionals.set(23);
      }
      if (struct.isSetThirdLink()) {
        optionals.set(24);
      }
      if (struct.isSetThirdNo()) {
        optionals.set(25);
      }
      if (struct.isSetThirdPicture()) {
        optionals.set(26);
      }
      if (struct.isSetSupplierCode()) {
        optionals.set(27);
      }
      if (struct.isSetStatus()) {
        optionals.set(28);
      }
      if (struct.isSetValidFlag()) {
        optionals.set(29);
      }
      if (struct.isSetCreateDate()) {
        optionals.set(30);
      }
      if (struct.isSetUpdateDate()) {
        optionals.set(31);
      }
      if (struct.isSetThirdDomain()) {
        optionals.set(32);
      }
      if (struct.isSetThirdId()) {
        optionals.set(33);
      }
      if (struct.isSetThirdCol1()) {
        optionals.set(34);
      }
      if (struct.isSetThirdCol2()) {
        optionals.set(35);
      }
      oprot.writeBitSet(optionals, 36);
      if (struct.isSetId()) {
        oprot.writeString(struct.id);
      }
      if (struct.isSetNo()) {
        oprot.writeString(struct.no);
      }
      if (struct.isSetName()) {
        oprot.writeString(struct.name);
      }
      if (struct.isSetBrandNo()) {
        oprot.writeString(struct.brandNo);
      }
      if (struct.isSetBrandName()) {
        oprot.writeString(struct.brandName);
      }
      if (struct.isSetCategoryNo()) {
        oprot.writeString(struct.categoryNo);
      }
      if (struct.isSetCategoryStruct()) {
        oprot.writeString(struct.categoryStruct);
      }
      if (struct.isSetCategoryStructName()) {
        oprot.writeString(struct.categoryStructName);
      }
      if (struct.isSetMerchantName()) {
        oprot.writeString(struct.merchantName);
      }
      if (struct.isSetMerchantCompany()) {
        oprot.writeString(struct.merchantCompany);
      }
      if (struct.isSetCostPrice()) {
        oprot.writeDouble(struct.costPrice);
      }
      if (struct.isSetSellPrice()) {
        oprot.writeDouble(struct.sellPrice);
      }
      if (struct.isSetGiveScore()) {
        oprot.writeI32(struct.giveScore);
      }
      if (struct.isSetMarketPrice()) {
        oprot.writeDouble(struct.marketPrice);
      }
      if (struct.isSetExpressPrice()) {
        oprot.writeDouble(struct.expressPrice);
      }
      if (struct.isSetCurrencyType()) {
        oprot.writeString(struct.currencyType);
      }
      if (struct.isSetStyleNo()) {
        oprot.writeString(struct.styleNo);
      }
      if (struct.isSetSpecName()) {
        oprot.writeString(struct.specName);
      }
      if (struct.isSetYear()) {
        oprot.writeString(struct.year);
      }
      if (struct.isSetUnit()) {
        oprot.writeString(struct.unit);
      }
      if (struct.isSetCountry()) {
        oprot.writeString(struct.country);
      }
      if (struct.isSetCity()) {
        oprot.writeString(struct.city);
      }
      if (struct.isSetGoodsDesc()) {
        oprot.writeString(struct.goodsDesc);
      }
      if (struct.isSetGoodsPicture()) {
        oprot.writeString(struct.goodsPicture);
      }
      if (struct.isSetThirdLink()) {
        oprot.writeString(struct.thirdLink);
      }
      if (struct.isSetThirdNo()) {
        oprot.writeString(struct.thirdNo);
      }
      if (struct.isSetThirdPicture()) {
        oprot.writeString(struct.thirdPicture);
      }
      if (struct.isSetSupplierCode()) {
        oprot.writeString(struct.supplierCode);
      }
      if (struct.isSetStatus()) {
        oprot.writeString(struct.status);
      }
      if (struct.isSetValidFlag()) {
        oprot.writeString(struct.validFlag);
      }
      if (struct.isSetCreateDate()) {
        oprot.writeI64(struct.createDate);
      }
      if (struct.isSetUpdateDate()) {
        oprot.writeI64(struct.updateDate);
      }
      if (struct.isSetThirdDomain()) {
        oprot.writeString(struct.thirdDomain);
      }
      if (struct.isSetThirdId()) {
        oprot.writeString(struct.thirdId);
      }
      if (struct.isSetThirdCol1()) {
        oprot.writeString(struct.thirdCol1);
      }
      if (struct.isSetThirdCol2()) {
        oprot.writeString(struct.thirdCol2);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TGoods struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(36);
      if (incoming.get(0)) {
        struct.id = iprot.readString();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.no = iprot.readString();
        struct.setNoIsSet(true);
      }
      if (incoming.get(2)) {
        struct.name = iprot.readString();
        struct.setNameIsSet(true);
      }
      if (incoming.get(3)) {
        struct.brandNo = iprot.readString();
        struct.setBrandNoIsSet(true);
      }
      if (incoming.get(4)) {
        struct.brandName = iprot.readString();
        struct.setBrandNameIsSet(true);
      }
      if (incoming.get(5)) {
        struct.categoryNo = iprot.readString();
        struct.setCategoryNoIsSet(true);
      }
      if (incoming.get(6)) {
        struct.categoryStruct = iprot.readString();
        struct.setCategoryStructIsSet(true);
      }
      if (incoming.get(7)) {
        struct.categoryStructName = iprot.readString();
        struct.setCategoryStructNameIsSet(true);
      }
      if (incoming.get(8)) {
        struct.merchantName = iprot.readString();
        struct.setMerchantNameIsSet(true);
      }
      if (incoming.get(9)) {
        struct.merchantCompany = iprot.readString();
        struct.setMerchantCompanyIsSet(true);
      }
      if (incoming.get(10)) {
        struct.costPrice = iprot.readDouble();
        struct.setCostPriceIsSet(true);
      }
      if (incoming.get(11)) {
        struct.sellPrice = iprot.readDouble();
        struct.setSellPriceIsSet(true);
      }
      if (incoming.get(12)) {
        struct.giveScore = iprot.readI32();
        struct.setGiveScoreIsSet(true);
      }
      if (incoming.get(13)) {
        struct.marketPrice = iprot.readDouble();
        struct.setMarketPriceIsSet(true);
      }
      if (incoming.get(14)) {
        struct.expressPrice = iprot.readDouble();
        struct.setExpressPriceIsSet(true);
      }
      if (incoming.get(15)) {
        struct.currencyType = iprot.readString();
        struct.setCurrencyTypeIsSet(true);
      }
      if (incoming.get(16)) {
        struct.styleNo = iprot.readString();
        struct.setStyleNoIsSet(true);
      }
      if (incoming.get(17)) {
        struct.specName = iprot.readString();
        struct.setSpecNameIsSet(true);
      }
      if (incoming.get(18)) {
        struct.year = iprot.readString();
        struct.setYearIsSet(true);
      }
      if (incoming.get(19)) {
        struct.unit = iprot.readString();
        struct.setUnitIsSet(true);
      }
      if (incoming.get(20)) {
        struct.country = iprot.readString();
        struct.setCountryIsSet(true);
      }
      if (incoming.get(21)) {
        struct.city = iprot.readString();
        struct.setCityIsSet(true);
      }
      if (incoming.get(22)) {
        struct.goodsDesc = iprot.readString();
        struct.setGoodsDescIsSet(true);
      }
      if (incoming.get(23)) {
        struct.goodsPicture = iprot.readString();
        struct.setGoodsPictureIsSet(true);
      }
      if (incoming.get(24)) {
        struct.thirdLink = iprot.readString();
        struct.setThirdLinkIsSet(true);
      }
      if (incoming.get(25)) {
        struct.thirdNo = iprot.readString();
        struct.setThirdNoIsSet(true);
      }
      if (incoming.get(26)) {
        struct.thirdPicture = iprot.readString();
        struct.setThirdPictureIsSet(true);
      }
      if (incoming.get(27)) {
        struct.supplierCode = iprot.readString();
        struct.setSupplierCodeIsSet(true);
      }
      if (incoming.get(28)) {
        struct.status = iprot.readString();
        struct.setStatusIsSet(true);
      }
      if (incoming.get(29)) {
        struct.validFlag = iprot.readString();
        struct.setValidFlagIsSet(true);
      }
      if (incoming.get(30)) {
        struct.createDate = iprot.readI64();
        struct.setCreateDateIsSet(true);
      }
      if (incoming.get(31)) {
        struct.updateDate = iprot.readI64();
        struct.setUpdateDateIsSet(true);
      }
      if (incoming.get(32)) {
        struct.thirdDomain = iprot.readString();
        struct.setThirdDomainIsSet(true);
      }
      if (incoming.get(33)) {
        struct.thirdId = iprot.readString();
        struct.setThirdIdIsSet(true);
      }
      if (incoming.get(34)) {
        struct.thirdCol1 = iprot.readString();
        struct.setThirdCol1IsSet(true);
      }
      if (incoming.get(35)) {
        struct.thirdCol2 = iprot.readString();
        struct.setThirdCol2IsSet(true);
      }
    }
  }

}

